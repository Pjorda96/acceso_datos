// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using placeMyBet.Models;

namespace placeMyBet.Migrations
{
    [DbContext(typeof(PlaceMyBetContext))]
    [Migration("20191108161739_migration02")]
    partial class migration02
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PlaceMyBet.Models.Apuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Cuota");

                    b.Property<DateTime>("Fecha");

                    b.Property<double>("Importe");

                    b.Property<int>("MercadoId");

                    b.Property<int>("TipoApuesta");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("MercadoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Apuestas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cuota = 1.2,
                            Fecha = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Importe = 10.0,
                            MercadoId = 1,
                            TipoApuesta = 0,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Cuota = 1.5,
                            Fecha = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Importe = 100.0,
                            MercadoId = 2,
                            TipoApuesta = 1,
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.Mercado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("COver");

                    b.Property<double>("CUnder");

                    b.Property<int>("PartidoId");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("PartidoId");

                    b.ToTable("Mercados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            COver = 3.0,
                            CUnder = 1.2,
                            PartidoId = 1,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            COver = 2.5,
                            CUnder = 1.5,
                            PartidoId = 2,
                            Tipo = 2
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Hora");

                    b.Property<string>("Local");

                    b.Property<string>("Visitante");

                    b.HasKey("Id");

                    b.ToTable("Partidos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Hora = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Local = "Valencia",
                            Visitante = "Barsa"
                        },
                        new
                        {
                            Id = 2,
                            Hora = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Local = "Madrid",
                            Visitante = "Leganes"
                        });
                });

            modelBuilder.Entity("placeMyBet.Models.DatosBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Alias");

                    b.Property<int>("Cvv");

                    b.Property<DateTime>("ExpTime");

                    b.Property<string>("Numero");

                    b.Property<int>("Tipo");

                    b.Property<string>("Titular");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DatosBancos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alias = "Tarjeta Black",
                            Cvv = 123,
                            ExpTime = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Numero = "126443653",
                            Tipo = 1,
                            Titular = "Pablo Jorda Garcia",
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 2,
                            Alias = "Visa Super Platino",
                            Cvv = 321,
                            ExpTime = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            Numero = "1266443653",
                            Tipo = 1,
                            Titular = "Eugenio",
                            UsuarioId = 2
                        });
                });

            modelBuilder.Entity("placeMyBet.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Apellidos");

                    b.Property<DateTime>("BirtdhDate");

                    b.Property<string>("DNI");

                    b.Property<string>("Email");

                    b.Property<string>("Nombre");

                    b.Property<double>("Saldo");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Active = false,
                            Apellidos = "Jorda Garcia",
                            BirtdhDate = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            DNI = "12345678B",
                            Email = "pjorda96@gmail.com",
                            Nombre = "Pablo",
                            Saldo = 0.0
                        },
                        new
                        {
                            UsuarioId = 2,
                            Active = false,
                            Apellidos = "Tio Uge",
                            BirtdhDate = new DateTime(2019, 10, 19, 19, 28, 49, 0, DateTimeKind.Unspecified),
                            DNI = "87654321A",
                            Email = "halleck@gmail.com",
                            Nombre = "Eugenio",
                            Saldo = 100.0
                        });
                });

            modelBuilder.Entity("PlaceMyBet.Models.Apuesta", b =>
                {
                    b.HasOne("PlaceMyBet.Models.Mercado", "Mercado")
                        .WithMany("Apuesta")
                        .HasForeignKey("MercadoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("placeMyBet.Models.Usuario", "Usuario")
                        .WithMany("Apuesta")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PlaceMyBet.Models.Mercado", b =>
                {
                    b.HasOne("PlaceMyBet.Models.Partido", "Partido")
                        .WithMany("Mercado")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("placeMyBet.Models.DatosBanco", b =>
                {
                    b.HasOne("placeMyBet.Models.Usuario", "Usuario")
                        .WithMany("DatosBanco")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
